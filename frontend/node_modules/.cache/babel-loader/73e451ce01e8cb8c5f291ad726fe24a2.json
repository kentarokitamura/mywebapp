{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Declaration = require('../declaration');\n\nvar BlockLogical = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(BlockLogical, _Declaration);\n\n  function BlockLogical() {\n    _classCallCheck(this, BlockLogical);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BlockLogical).apply(this, arguments));\n  }\n\n  _createClass(BlockLogical, [{\n    key: \"prefixed\",\n\n    /**\n     * Use old syntax for -moz- and -webkit-\n     */\n    value: function prefixed(prop, prefix) {\n      if (prop.includes('-start')) {\n        return prefix + prop.replace('-block-start', '-before');\n      }\n\n      return prefix + prop.replace('-block-end', '-after');\n    }\n    /**\n     * Return property name by spec\n     */\n\n  }, {\n    key: \"normalize\",\n    value: function normalize(prop) {\n      if (prop.includes('-before')) {\n        return prop.replace('-before', '-block-start');\n      }\n\n      return prop.replace('-after', '-block-end');\n    }\n  }]);\n\n  return BlockLogical;\n}(Declaration);\n\nBlockLogical.names = ['border-block-start', 'border-block-end', 'margin-block-start', 'margin-block-end', 'padding-block-start', 'padding-block-end', 'border-before', 'border-after', 'margin-before', 'margin-after', 'padding-before', 'padding-after'];\nmodule.exports = BlockLogical;","map":null,"metadata":{},"sourceType":"script"}