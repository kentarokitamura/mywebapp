{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Declaration = require('../declaration');\n\nvar BreakProps = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(BreakProps, _Declaration);\n\n  function BreakProps() {\n    _classCallCheck(this, BreakProps);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BreakProps).apply(this, arguments));\n  }\n\n  _createClass(BreakProps, [{\n    key: \"prefixed\",\n\n    /**\n     * Change name for -webkit- and -moz- prefix\n     */\n    value: function prefixed(prop, prefix) {\n      return \"\".concat(prefix, \"column-\").concat(prop);\n    }\n    /**\n     * Return property name by final spec\n     */\n\n  }, {\n    key: \"normalize\",\n    value: function normalize(prop) {\n      if (prop.includes('inside')) {\n        return 'break-inside';\n      }\n\n      if (prop.includes('before')) {\n        return 'break-before';\n      }\n\n      return 'break-after';\n    }\n    /**\n     * Change prefixed value for avoid-column and avoid-page\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(decl, prefix) {\n      if (decl.prop === 'break-inside' && decl.value === 'avoid-column' || decl.value === 'avoid-page') {\n        decl.value = 'avoid';\n      }\n\n      return _get(_getPrototypeOf(BreakProps.prototype), \"set\", this).call(this, decl, prefix);\n    }\n    /**\n     * Donâ€™t prefix some values\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(decl, prefix, prefixes) {\n      if (decl.prop !== 'break-inside') {\n        return _get(_getPrototypeOf(BreakProps.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n      }\n\n      if (/region/i.test(decl.value) || /page/i.test(decl.value)) {\n        return undefined;\n      }\n\n      return _get(_getPrototypeOf(BreakProps.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n    }\n  }]);\n\n  return BreakProps;\n}(Declaration);\n\nBreakProps.names = ['break-inside', 'page-break-inside', 'column-break-inside', 'break-before', 'page-break-before', 'column-break-before', 'break-after', 'page-break-after', 'column-break-after'];\nmodule.exports = BreakProps;","map":null,"metadata":{},"sourceType":"script"}