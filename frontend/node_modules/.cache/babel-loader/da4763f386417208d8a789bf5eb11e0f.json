{"ast":null,"code":"var _slicedToArray = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar flexSpec = require('./flex-spec');\n\nvar Declaration = require('../declaration');\n\nvar JustifyContent = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(JustifyContent, _Declaration);\n\n  function JustifyContent() {\n    _classCallCheck(this, JustifyContent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(JustifyContent).apply(this, arguments));\n  }\n\n  _createClass(JustifyContent, [{\n    key: \"prefixed\",\n\n    /**\n     * Change property name for 2009 and 2012 specs\n     */\n    value: function prefixed(prop, prefix) {\n      var spec;\n\n      var _flexSpec = flexSpec(prefix);\n\n      var _flexSpec2 = _slicedToArray(_flexSpec, 2);\n\n      spec = _flexSpec2[0];\n      prefix = _flexSpec2[1];\n\n      if (spec === 2009) {\n        return prefix + 'box-pack';\n      }\n\n      if (spec === 2012) {\n        return prefix + 'flex-pack';\n      }\n\n      return _get(_getPrototypeOf(JustifyContent.prototype), \"prefixed\", this).call(this, prop, prefix);\n    }\n    /**\n     * Return property name by final spec\n     */\n\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      return 'justify-content';\n    }\n    /**\n     * Change value for 2009 and 2012 specs\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(decl, prefix) {\n      var spec = flexSpec(prefix)[0];\n\n      if (spec === 2009 || spec === 2012) {\n        var value = JustifyContent.oldValues[decl.value] || decl.value;\n        decl.value = value;\n\n        if (spec !== 2009 || value !== 'distribute') {\n          return _get(_getPrototypeOf(JustifyContent.prototype), \"set\", this).call(this, decl, prefix);\n        }\n      } else if (spec === 'final') {\n        return _get(_getPrototypeOf(JustifyContent.prototype), \"set\", this).call(this, decl, prefix);\n      }\n\n      return undefined;\n    }\n  }]);\n\n  return JustifyContent;\n}(Declaration);\n\nJustifyContent.names = ['justify-content', 'flex-pack', 'box-pack'];\nJustifyContent.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start',\n  'space-between': 'justify',\n  'space-around': 'distribute'\n};\nmodule.exports = JustifyContent;","map":null,"metadata":{},"sourceType":"script"}