{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar Declaration = require('../declaration');\n\nvar TransformDecl = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(TransformDecl, _Declaration);\n\n  function TransformDecl() {\n    _classCallCheck(this, TransformDecl);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TransformDecl).apply(this, arguments));\n  }\n\n  _createClass(TransformDecl, [{\n    key: \"keyframeParents\",\n\n    /**\n     * Recursively check all parents for @keyframes\n     */\n    value: function keyframeParents(decl) {\n      var parent = decl.parent;\n\n      while (parent) {\n        if (parent.type === 'atrule' && parent.name === 'keyframes') {\n          return true;\n        }\n\n        ;\n        var _parent = parent;\n        parent = _parent.parent;\n      }\n\n      return false;\n    }\n    /**\n     * Is transform contain 3D commands\n     */\n\n  }, {\n    key: \"contain3d\",\n    value: function contain3d(decl) {\n      if (decl.prop === 'transform-origin') {\n        return false;\n      }\n\n      var _iterator = _createForOfIteratorHelper(TransformDecl.functions3d),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var func = _step.value;\n\n          if (decl.value.includes(\"\".concat(func, \"(\"))) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return false;\n    }\n    /**\n     * Replace rotateZ to rotate for IE 9\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(decl, prefix) {\n      decl = _get(_getPrototypeOf(TransformDecl.prototype), \"set\", this).call(this, decl, prefix);\n\n      if (prefix === '-ms-') {\n        decl.value = decl.value.replace(/rotatez/gi, 'rotate');\n      }\n\n      return decl;\n    }\n    /**\n     * Don't add prefix for IE in keyframes\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(decl, prefix, prefixes) {\n      if (prefix === '-ms-') {\n        if (!this.contain3d(decl) && !this.keyframeParents(decl)) {\n          return _get(_getPrototypeOf(TransformDecl.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n        }\n      } else if (prefix === '-o-') {\n        if (!this.contain3d(decl)) {\n          return _get(_getPrototypeOf(TransformDecl.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n        }\n      } else {\n        return _get(_getPrototypeOf(TransformDecl.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n      }\n\n      return undefined;\n    }\n  }]);\n\n  return TransformDecl;\n}(Declaration);\n\nTransformDecl.names = ['transform', 'transform-origin'];\nTransformDecl.functions3d = ['matrix3d', 'translate3d', 'translateZ', 'scale3d', 'scaleZ', 'rotate3d', 'rotateX', 'rotateY', 'perspective'];\nmodule.exports = TransformDecl;","map":null,"metadata":{},"sourceType":"script"}