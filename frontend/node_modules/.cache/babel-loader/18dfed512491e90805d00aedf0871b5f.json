{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Declaration = require('../declaration');\n\nvar InlineLogical = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(InlineLogical, _Declaration);\n\n  function InlineLogical() {\n    _classCallCheck(this, InlineLogical);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InlineLogical).apply(this, arguments));\n  }\n\n  _createClass(InlineLogical, [{\n    key: \"prefixed\",\n\n    /**\n     * Use old syntax for -moz- and -webkit-\n     */\n    value: function prefixed(prop, prefix) {\n      return prefix + prop.replace('-inline', '');\n    }\n    /**\n     * Return property name by spec\n     */\n\n  }, {\n    key: \"normalize\",\n    value: function normalize(prop) {\n      return prop.replace(/(margin|padding|border)-(start|end)/, '$1-inline-$2');\n    }\n  }]);\n\n  return InlineLogical;\n}(Declaration);\n\nInlineLogical.names = ['border-inline-start', 'border-inline-end', 'margin-inline-start', 'margin-inline-end', 'padding-inline-start', 'padding-inline-end', 'border-start', 'border-end', 'margin-start', 'margin-end', 'padding-start', 'padding-end'];\nmodule.exports = InlineLogical;","map":null,"metadata":{},"sourceType":"script"}