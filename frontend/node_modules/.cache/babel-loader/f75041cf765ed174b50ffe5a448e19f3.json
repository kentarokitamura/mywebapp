{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Declaration = require('../declaration');\n\nvar _require = require('./grid-utils'),\n    parseTemplate = _require.parseTemplate,\n    warnMissedAreas = _require.warnMissedAreas,\n    getGridGap = _require.getGridGap,\n    warnGridGap = _require.warnGridGap,\n    inheritGridGap = _require.inheritGridGap;\n\nvar GridTemplate = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(GridTemplate, _Declaration);\n\n  function GridTemplate() {\n    _classCallCheck(this, GridTemplate);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GridTemplate).apply(this, arguments));\n  }\n\n  _createClass(GridTemplate, [{\n    key: \"insert\",\n\n    /**\n     * Translate grid-template to separate -ms- prefixed properties\n     */\n    value: function insert(decl, prefix, prefixes, result) {\n      if (prefix !== '-ms-') return _get(_getPrototypeOf(GridTemplate.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n\n      if (decl.parent.some(function (i) {\n        return i.prop === '-ms-grid-rows';\n      })) {\n        return undefined;\n      }\n\n      var gap = getGridGap(decl);\n      /**\n       * we must insert inherited gap values in some cases:\n       * if we are inside media query && if we have no grid-gap value\n       */\n\n      var inheritedGap = inheritGridGap(decl, gap);\n\n      var _parseTemplate = parseTemplate({\n        decl: decl,\n        gap: inheritedGap || gap\n      }),\n          rows = _parseTemplate.rows,\n          columns = _parseTemplate.columns,\n          areas = _parseTemplate.areas;\n\n      var hasAreas = Object.keys(areas).length > 0;\n      var hasRows = Boolean(rows);\n      var hasColumns = Boolean(columns);\n      warnGridGap({\n        gap: gap,\n        hasColumns: hasColumns,\n        decl: decl,\n        result: result\n      });\n      warnMissedAreas(areas, decl, result);\n\n      if (hasRows && hasColumns || hasAreas) {\n        decl.cloneBefore({\n          prop: '-ms-grid-rows',\n          value: rows,\n          raws: {}\n        });\n      }\n\n      if (hasColumns) {\n        decl.cloneBefore({\n          prop: '-ms-grid-columns',\n          value: columns,\n          raws: {}\n        });\n      }\n\n      return decl;\n    }\n  }]);\n\n  return GridTemplate;\n}(Declaration);\n\nGridTemplate.names = ['grid-template'];\nmodule.exports = GridTemplate;","map":null,"metadata":{},"sourceType":"script"}