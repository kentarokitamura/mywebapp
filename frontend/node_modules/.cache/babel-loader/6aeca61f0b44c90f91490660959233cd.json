{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Declaration = require('../declaration');\n\nvar UserSelect = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(UserSelect, _Declaration);\n\n  function UserSelect() {\n    _classCallCheck(this, UserSelect);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UserSelect).apply(this, arguments));\n  }\n\n  _createClass(UserSelect, [{\n    key: \"set\",\n\n    /**\n     * Change prefixed value for IE\n     */\n    value: function set(decl, prefix) {\n      if (prefix === '-ms-' && decl.value === 'contain') {\n        decl.value = 'element';\n      }\n\n      return _get(_getPrototypeOf(UserSelect.prototype), \"set\", this).call(this, decl, prefix);\n    }\n    /**\n     * Avoid prefixing all in IE\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(decl, prefix, prefixes) {\n      if (decl.value === 'all' && prefix === '-ms-') {\n        return undefined;\n      } else {\n        return _get(_getPrototypeOf(UserSelect.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n      }\n    }\n  }]);\n\n  return UserSelect;\n}(Declaration);\n\nUserSelect.names = ['user-select'];\nmodule.exports = UserSelect;","map":null,"metadata":{},"sourceType":"script"}