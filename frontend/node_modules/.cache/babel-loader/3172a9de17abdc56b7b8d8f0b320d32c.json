{"ast":null,"code":"var _slicedToArray = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar list = require('postcss').list;\n\nvar flexSpec = require('./flex-spec');\n\nvar Declaration = require('../declaration');\n\nvar Flex = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(Flex, _Declaration);\n\n  function Flex() {\n    _classCallCheck(this, Flex);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Flex).apply(this, arguments));\n  }\n\n  _createClass(Flex, [{\n    key: \"prefixed\",\n\n    /**\n     * Change property name for 2009 spec\n     */\n    value: function prefixed(prop, prefix) {\n      var spec;\n\n      var _flexSpec = flexSpec(prefix);\n\n      var _flexSpec2 = _slicedToArray(_flexSpec, 2);\n\n      spec = _flexSpec2[0];\n      prefix = _flexSpec2[1];\n\n      if (spec === 2009) {\n        return prefix + 'box-flex';\n      }\n\n      return _get(_getPrototypeOf(Flex.prototype), \"prefixed\", this).call(this, prop, prefix);\n    }\n    /**\n     * Return property name by final spec\n     */\n\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      return 'flex';\n    }\n    /**\n     * Spec 2009 supports only first argument\n     * Spec 2012 disallows unitless basis\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(decl, prefix) {\n      var spec = flexSpec(prefix)[0];\n\n      if (spec === 2009) {\n        decl.value = list.space(decl.value)[0];\n        decl.value = Flex.oldValues[decl.value] || decl.value;\n        return _get(_getPrototypeOf(Flex.prototype), \"set\", this).call(this, decl, prefix);\n      }\n\n      if (spec === 2012) {\n        var components = list.space(decl.value);\n\n        if (components.length === 3 && components[2] === '0') {\n          decl.value = components.slice(0, 2).concat('0px').join(' ');\n        }\n      }\n\n      return _get(_getPrototypeOf(Flex.prototype), \"set\", this).call(this, decl, prefix);\n    }\n  }]);\n\n  return Flex;\n}(Declaration);\n\nFlex.names = ['flex', 'box-flex'];\nFlex.oldValues = {\n  auto: '1',\n  none: '0'\n};\nmodule.exports = Flex;","map":null,"metadata":{},"sourceType":"script"}