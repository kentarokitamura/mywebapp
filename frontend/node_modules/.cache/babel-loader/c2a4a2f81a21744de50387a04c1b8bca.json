{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Declaration = require('../declaration');\n\nvar GridStart = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(GridStart, _Declaration);\n\n  function GridStart() {\n    _classCallCheck(this, GridStart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GridStart).apply(this, arguments));\n  }\n\n  _createClass(GridStart, [{\n    key: \"check\",\n\n    /**\n     * Do not add prefix for unsupported value in IE\n     */\n    value: function check(decl) {\n      var value = decl.value;\n      return !value.includes('/') && !value.includes('span');\n    }\n    /**\n     * Return a final spec property\n     */\n\n  }, {\n    key: \"normalize\",\n    value: function normalize(prop) {\n      return prop.replace('-start', '');\n    }\n    /**\n     * Change property name for IE\n     */\n\n  }, {\n    key: \"prefixed\",\n    value: function prefixed(prop, prefix) {\n      var result = _get(_getPrototypeOf(GridStart.prototype), \"prefixed\", this).call(this, prop, prefix);\n\n      if (prefix === '-ms-') {\n        result = result.replace('-start', '');\n      }\n\n      return result;\n    }\n  }]);\n\n  return GridStart;\n}(Declaration);\n\nGridStart.names = ['grid-row-start', 'grid-column-start'];\nmodule.exports = GridStart;","map":null,"metadata":{},"sourceType":"script"}