{"ast":null,"code":"var _slicedToArray = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Declaration = require('../declaration');\n\nvar utils = require('./grid-utils');\n\nvar GridArea = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(GridArea, _Declaration);\n\n  function GridArea() {\n    _classCallCheck(this, GridArea);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GridArea).apply(this, arguments));\n  }\n\n  _createClass(GridArea, [{\n    key: \"insert\",\n\n    /**\n     * Translate grid-area to separate -ms- prefixed properties\n     */\n    value: function insert(decl, prefix, prefixes, result) {\n      if (prefix !== '-ms-') return _get(_getPrototypeOf(GridArea.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n      var values = utils.parse(decl);\n\n      var _utils$translate = utils.translate(values, 0, 2),\n          _utils$translate2 = _slicedToArray(_utils$translate, 2),\n          rowStart = _utils$translate2[0],\n          rowSpan = _utils$translate2[1];\n\n      var _utils$translate3 = utils.translate(values, 1, 3),\n          _utils$translate4 = _slicedToArray(_utils$translate3, 2),\n          columnStart = _utils$translate4[0],\n          columnSpan = _utils$translate4[1];\n\n      [['grid-row', rowStart], ['grid-row-span', rowSpan], ['grid-column', columnStart], ['grid-column-span', columnSpan]].forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            prop = _ref2[0],\n            value = _ref2[1];\n\n        utils.insertDecl(decl, prop, value);\n      });\n      utils.warnTemplateSelectorNotFound(decl, result);\n      utils.warnIfGridRowColumnExists(decl, result);\n      return undefined;\n    }\n  }]);\n\n  return GridArea;\n}(Declaration);\n\nGridArea.names = ['grid-area'];\nmodule.exports = GridArea;","map":null,"metadata":{},"sourceType":"script"}