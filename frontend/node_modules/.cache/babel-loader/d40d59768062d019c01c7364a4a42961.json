{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Container = require('./container');\n\nvar AtRule = /*#__PURE__*/function (_Container) {\n  _inherits(AtRule, _Container);\n\n  function AtRule(defaults) {\n    var _this;\n\n    _classCallCheck(this, AtRule);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AtRule).call(this, defaults));\n    _this.type = 'atrule';\n    return _this;\n  }\n\n  _createClass(AtRule, [{\n    key: \"append\",\n    value: function append() {\n      var _get2;\n\n      if (!this.proxyOf.nodes) this.nodes = [];\n\n      for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {\n        children[_key] = arguments[_key];\n      }\n\n      return (_get2 = _get(_getPrototypeOf(AtRule.prototype), \"append\", this)).call.apply(_get2, [this].concat(children));\n    }\n  }, {\n    key: \"prepend\",\n    value: function prepend() {\n      var _get3;\n\n      if (!this.proxyOf.nodes) this.nodes = [];\n\n      for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        children[_key2] = arguments[_key2];\n      }\n\n      return (_get3 = _get(_getPrototypeOf(AtRule.prototype), \"prepend\", this)).call.apply(_get3, [this].concat(children));\n    }\n  }]);\n\n  return AtRule;\n}(Container);\n\nmodule.exports = AtRule;\nAtRule.default = AtRule;\nContainer.registerAtRule(AtRule);","map":null,"metadata":{},"sourceType":"script"}