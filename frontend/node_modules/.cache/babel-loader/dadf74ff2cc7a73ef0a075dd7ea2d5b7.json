{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Declaration = require('../declaration');\n\nvar _require = require('./grid-utils'),\n    parseGridAreas = _require.parseGridAreas,\n    warnMissedAreas = _require.warnMissedAreas,\n    prefixTrackProp = _require.prefixTrackProp,\n    prefixTrackValue = _require.prefixTrackValue,\n    getGridGap = _require.getGridGap,\n    warnGridGap = _require.warnGridGap,\n    inheritGridGap = _require.inheritGridGap;\n\nfunction getGridRows(tpl) {\n  return tpl.trim().slice(1, -1).split(/[\"']\\s*[\"']?/g);\n}\n\nvar GridTemplateAreas = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(GridTemplateAreas, _Declaration);\n\n  function GridTemplateAreas() {\n    _classCallCheck(this, GridTemplateAreas);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GridTemplateAreas).apply(this, arguments));\n  }\n\n  _createClass(GridTemplateAreas, [{\n    key: \"insert\",\n\n    /**\n     * Translate grid-template-areas to separate -ms- prefixed properties\n     */\n    value: function insert(decl, prefix, prefixes, result) {\n      if (prefix !== '-ms-') return _get(_getPrototypeOf(GridTemplateAreas.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n      var hasColumns = false;\n      var hasRows = false;\n      var parent = decl.parent;\n      var gap = getGridGap(decl);\n      gap = inheritGridGap(decl, gap) || gap; // remove already prefixed rows\n      // to prevent doubling prefixes\n\n      parent.walkDecls(/-ms-grid-rows/, function (i) {\n        return i.remove();\n      }); // add empty tracks to rows\n\n      parent.walkDecls(/grid-template-(rows|columns)/, function (trackDecl) {\n        if (trackDecl.prop === 'grid-template-rows') {\n          hasRows = true;\n          var prop = trackDecl.prop,\n              value = trackDecl.value;\n          trackDecl.cloneBefore({\n            prop: prefixTrackProp({\n              prop: prop,\n              prefix: prefix\n            }),\n            value: prefixTrackValue({\n              value: value,\n              gap: gap.row\n            })\n          });\n        } else {\n          hasColumns = true;\n        }\n      });\n      var gridRows = getGridRows(decl.value);\n\n      if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {\n        decl.cloneBefore({\n          prop: '-ms-grid-rows',\n          value: prefixTrackValue({\n            value: \"repeat(\".concat(gridRows.length, \", auto)\"),\n            gap: gap.row\n          }),\n          raws: {}\n        });\n      } // warnings\n\n\n      warnGridGap({\n        gap: gap,\n        hasColumns: hasColumns,\n        decl: decl,\n        result: result\n      });\n      var areas = parseGridAreas({\n        rows: gridRows,\n        gap: gap\n      });\n      warnMissedAreas(areas, decl, result);\n      return decl;\n    }\n  }]);\n\n  return GridTemplateAreas;\n}(Declaration);\n\nGridTemplateAreas.names = ['grid-template-areas'];\nmodule.exports = GridTemplateAreas;","map":null,"metadata":{},"sourceType":"script"}