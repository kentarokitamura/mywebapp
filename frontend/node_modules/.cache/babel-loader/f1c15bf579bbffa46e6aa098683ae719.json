{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Declaration = require('../declaration');\n\nvar PrintColorAdjust = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(PrintColorAdjust, _Declaration);\n\n  function PrintColorAdjust() {\n    _classCallCheck(this, PrintColorAdjust);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PrintColorAdjust).apply(this, arguments));\n  }\n\n  _createClass(PrintColorAdjust, [{\n    key: \"prefixed\",\n\n    /**\n     * Change property name for WebKit-based browsers\n     */\n    value: function prefixed(prop, prefix) {\n      if (prefix === '-moz-') {\n        return 'color-adjust';\n      } else {\n        return prefix + 'print-color-adjust';\n      }\n    }\n    /**\n     * Return property name by spec\n     */\n\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      return 'print-color-adjust';\n    }\n  }]);\n\n  return PrintColorAdjust;\n}(Declaration);\n\nPrintColorAdjust.names = ['print-color-adjust', 'color-adjust'];\nmodule.exports = PrintColorAdjust;","map":null,"metadata":{},"sourceType":"script"}