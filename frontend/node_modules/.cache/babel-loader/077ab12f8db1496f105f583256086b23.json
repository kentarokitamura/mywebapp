{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\admin\\\\Projects\\\\mywebapp\\\\frontend\\\\src\\\\pages\\\\EventListPage.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport ListItem from \"../components/ListItem\";\nimport AuthContext from \"../context/AuthContext\";\nimport FirstSection from \"../sections/FirstSection\";\nimport SecondSection from \"../sections/SecondSection\";\n\nvar EventListPage = function EventListPage() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      events = _useState2[0],\n      setEvents = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      authTokens = _useContext.authTokens,\n      logoutUser = _useContext.logoutUser;\n\n  useEffect(function () {\n    getEvents();\n  }, []);\n\n  var getEvents = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://127.0.0.1:8000/api/events/\", {\n                method: \"GET\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n\n              if (response.status === 200) {\n                setEvents(data);\n              } else if (response.statusText === \"Unauthorized\") {\n                logoutUser();\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getEvents() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt-19\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FirstSection, {\n    data: events,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SecondSection, {\n    data: events,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default EventListPage; // const [message, setMessage] = useState(\"\");\n// const [messages, setMessages] = useState([]);\n// const [sheets, setSheets] = useState(0);\n// const [title, setTitle] = useState(\"\");\n// // let url = `ws://${window.location.host}/ws/socet-server/`;\n// let url = `ws://127.0.0.1:8000/ws/socket-server/`;\n// const chatSocket = new WebSocket(url);\n// useEffect(() => {\n//   chatSocket.onmessage = (e) => {\n//     const data = JSON.parse(e.data);\n//     console.log(data);\n//     setMessages(data);\n//   };\n// }, []);\n// const sendMessage = () => {\n//   chatSocket.send(\n//     JSON.stringify({\n//       type: \"chat\",\n//       message: message,\n//       title: title,\n//       sheets: sheets,\n//     })\n//   );\n//   setMessage(\"\");\n//   setSheets(0);\n//   setTitle(\"\");\n//   chatSocket.onmessage = (e) => {\n//     const data = JSON.parse(e.data);\n//     console.log(data);\n//     setMessages(data);\n//   };\n// };\n// <h2> title</h2>\n// <textarea\n//   value={title}\n//   onChange={(e) => {\n//     setTitle(e.target.value);\n//   }}\n// />\n// <h2>body</h2>\n// <textarea\n//   value={message}\n//   onChange={(e) => {\n//     setMessage(e.target.value);\n//   }}\n// />\n// <h2>sheets</h2>\n// <textarea\n//   value={sheets}\n//   onChange={(e) => {\n//     setSheets(e.target.value);\n//   }}\n// />\n// <button onClick={sendMessage}>send</button>\n// <div>\n//   {messages.map((m, index) => (\n//     <div key={index}>\n//       <h1> {m.title} </h1>\n//       <h2>{m.body}</h2>\n//     </div>\n//   ))}\n// </div>\n// <h1>aui</h1>","map":{"version":3,"names":["React","useContext","useEffect","useState","ListItem","AuthContext","FirstSection","SecondSection","EventListPage","events","setEvents","authTokens","logoutUser","getEvents","fetch","method","headers","response","json","data","status","statusText"],"sources":["C:/Users/admin/Projects/mywebapp/frontend/src/pages/EventListPage.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport ListItem from \"../components/ListItem\";\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport FirstSection from \"../sections/FirstSection\";\r\nimport SecondSection from \"../sections/SecondSection\";\r\n\r\nconst EventListPage = () => {\r\n    const [events, setEvents] = useState([]);\r\n    let { authTokens, logoutUser } = useContext(AuthContext);\r\n    useEffect(() => {\r\n        getEvents();\r\n    }, []);\r\n\r\n    const getEvents = async () => {\r\n        let response = await fetch(\"http://127.0.0.1:8000/api/events/\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        });\r\n        let data = await response.json();\r\n        if (response.status === 200) {\r\n            setEvents(data);\r\n        } else if (response.statusText === \"Unauthorized\") {\r\n            logoutUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"pt-19\">\r\n            <FirstSection data={events} />\r\n            <SecondSection data={events} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventListPage;\r\n// const [message, setMessage] = useState(\"\");\r\n// const [messages, setMessages] = useState([]);\r\n// const [sheets, setSheets] = useState(0);\r\n// const [title, setTitle] = useState(\"\");\r\n// // let url = `ws://${window.location.host}/ws/socet-server/`;\r\n// let url = `ws://127.0.0.1:8000/ws/socket-server/`;\r\n// const chatSocket = new WebSocket(url);\r\n// useEffect(() => {\r\n//   chatSocket.onmessage = (e) => {\r\n//     const data = JSON.parse(e.data);\r\n//     console.log(data);\r\n//     setMessages(data);\r\n//   };\r\n// }, []);\r\n\r\n// const sendMessage = () => {\r\n//   chatSocket.send(\r\n//     JSON.stringify({\r\n//       type: \"chat\",\r\n//       message: message,\r\n//       title: title,\r\n//       sheets: sheets,\r\n//     })\r\n//   );\r\n//   setMessage(\"\");\r\n//   setSheets(0);\r\n//   setTitle(\"\");\r\n//   chatSocket.onmessage = (e) => {\r\n//     const data = JSON.parse(e.data);\r\n//     console.log(data);\r\n//     setMessages(data);\r\n//   };\r\n// };\r\n\r\n// <h2> title</h2>\r\n// <textarea\r\n//   value={title}\r\n//   onChange={(e) => {\r\n//     setTitle(e.target.value);\r\n//   }}\r\n// />\r\n// <h2>body</h2>\r\n// <textarea\r\n//   value={message}\r\n//   onChange={(e) => {\r\n//     setMessage(e.target.value);\r\n//   }}\r\n// />\r\n\r\n// <h2>sheets</h2>\r\n// <textarea\r\n//   value={sheets}\r\n//   onChange={(e) => {\r\n//     setSheets(e.target.value);\r\n//   }}\r\n// />\r\n\r\n// <button onClick={sendMessage}>send</button>\r\n// <div>\r\n//   {messages.map((m, index) => (\r\n//     <div key={index}>\r\n//       <h1> {m.title} </h1>\r\n//       <h2>{m.body}</h2>\r\n//     </div>\r\n//   ))}\r\n// </div>\r\n// <h1>aui</h1>\r\n"],"mappings":";;;;;;+CACA,oJ;;AADA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAAA,gBACIL,QAAQ,CAAC,EAAD,CADZ;EAAA;EAAA,IACjBM,MADiB;EAAA,IACTC,SADS;;EAAA,kBAEST,UAAU,CAACI,WAAD,CAFnB;EAAA,IAElBM,UAFkB,eAElBA,UAFkB;EAAA,IAENC,UAFM,eAENA,UAFM;;EAGxBV,SAAS,CAAC,YAAM;IACZW,SAAS;EACZ,CAFQ,EAEN,EAFM,CAAT;;EAIA,IAAMA,SAAS;IAAA,sEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACOC,KAAK,CAAC,mCAAD,EAAsC;gBAC5DC,MAAM,EAAE,KADoD;gBAE5DC,OAAO,EAAE;kBACL,gBAAgB;gBADX;cAFmD,CAAtC,CADZ;;YAAA;cACVC,QADU;cAAA;cAAA,OAOGA,QAAQ,CAACC,IAAT,EAPH;;YAAA;cAOVC,IAPU;;cAQd,IAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;gBACzBV,SAAS,CAACS,IAAD,CAAT;cACH,CAFD,MAEO,IAAIF,QAAQ,CAACI,UAAT,KAAwB,cAA5B,EAA4C;gBAC/CT,UAAU;cACb;;YAZa;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAATC,SAAS;MAAA;IAAA;EAAA,GAAf;;EAeA,oBACI;IAAK,SAAS,EAAC,OAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,YAAD;IAAc,IAAI,EAAEJ,MAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAEI,oBAAC,aAAD;IAAe,IAAI,EAAEA,MAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CADJ;AAMH,CA5BD;;AA8BA,eAAeD,aAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}