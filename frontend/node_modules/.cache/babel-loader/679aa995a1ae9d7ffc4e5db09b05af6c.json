{"ast":null,"code":"'use strict';\n\nvar statuses = require('../lib/statuses');\n\nvar supported = require('../lib/supported');\n\nvar browsers = require('./browsers').browsers;\n\nvar versions = require('./browserVersions').browserVersions;\n\nvar MATH2LOG = Math.log(2);\n\nfunction unpackSupport(cipher) {\n  // bit flags\n  var stats = Object.keys(supported).reduce(function (list, support) {\n    if (cipher & supported[support]) list.push(support);\n    return list;\n  }, []); // notes\n\n  var notes = cipher >> 7;\n  var notesArray = [];\n\n  while (notes) {\n    var note = Math.floor(Math.log(notes) / MATH2LOG) + 1;\n    notesArray.unshift(\"#\".concat(note));\n    notes -= Math.pow(2, note - 1);\n  }\n\n  return stats.concat(notesArray).join(' ');\n}\n\nfunction unpackFeature(packed) {\n  var unpacked = {\n    status: statuses[packed.B],\n    title: packed.C\n  };\n  unpacked.stats = Object.keys(packed.A).reduce(function (browserStats, key) {\n    var browser = packed.A[key];\n    browserStats[browsers[key]] = Object.keys(browser).reduce(function (stats, support) {\n      var packedVersions = browser[support].split(' ');\n      var unpacked2 = unpackSupport(support);\n      packedVersions.forEach(function (v) {\n        return stats[versions[v]] = unpacked2;\n      });\n      return stats;\n    }, {});\n    return browserStats;\n  }, {});\n  return unpacked;\n}\n\nmodule.exports = unpackFeature;\nmodule.exports.default = unpackFeature;","map":null,"metadata":{},"sourceType":"script"}