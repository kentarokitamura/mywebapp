{"version":3,"sources":["components/Header.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","App","_useState","useState","_useState2","Object","slicedToArray","message","setMessage","_useState3","_useState4","messages","setMessages","_useState5","_useState6","sheets","setSheets","_useState7","_useState8","title","setTitle","chatSocket","WebSocket","useEffect","onmessage","e","data","JSON","parse","console","log","components_Header","value","onChange","target","onClick","send","stringify","type","map","m","index","key","body","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"6LAceA,SAZA,WACb,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,wDAEFF,EAAAC,EAAAC,cAAA,cCwESE,MA1Ef,WAAe,IAAAC,EACiBC,mBAAS,IAD1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACGI,EADHJ,EAAA,GAAAK,EAEmBN,mBAAS,IAF5BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAENE,EAFMD,EAAA,GAEIE,EAFJF,EAAA,GAAAG,EAGeV,mBAAS,GAHxBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGNE,EAHMD,EAAA,GAGEE,EAHFF,EAAA,GAAAG,EAIad,mBAAS,IAJtBe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAINE,EAJMD,EAAA,GAICE,EAJDF,EAAA,GAOPG,EAAa,IAAIC,UADhB,yCA4BP,OA1BAC,oBAAU,WACRF,EAAWG,UAAY,SAACC,GACtB,IAAMC,EAAOC,KAAKC,MAAMH,EAAEC,MAC1BG,QAAQC,IAAIJ,GACZd,EAAYc,KAEb,IAqBD7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACgC,EAAD,MACAlC,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,YACEiC,MAAOb,EACPc,SAAU,SAACR,GACTL,EAASK,EAAES,OAAOF,UAGtBnC,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,YACEiC,MAAOzB,EACP0B,SAAU,SAACR,GACTjB,EAAWiB,EAAES,OAAOF,UAIxBnC,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,YACEiC,MAAOjB,EACPkB,SAAU,SAACR,GACTT,EAAUS,EAAES,OAAOF,UAIvBnC,EAAAC,EAAAC,cAAA,UAAQoC,QA5CQ,WAClBd,EAAWe,KACTT,KAAKU,UAAU,CACbC,KAAM,OACN/B,QAASA,EACTY,MAAOA,EACPJ,OAAQA,KAGZP,EAAW,IACXQ,EAAU,GACVI,EAAS,IACTC,EAAWG,UAAY,SAACC,GACtB,IAAMC,EAAOC,KAAKC,MAAMH,EAAEC,MAC1BG,QAAQC,IAAIJ,GACZd,EAAYc,MA6BZ,QACA7B,EAAAC,EAAAC,cAAA,WACGY,EAAS4B,IAAI,SAACC,EAAGC,GAAJ,OACZ5C,EAAAC,EAAAC,cAAA,OAAK2C,IAAKD,GACR5C,EAAAC,EAAAC,cAAA,cAAMyC,EAAErB,MAAR,KACAtB,EAAAC,EAAAC,cAAA,UAAKyC,EAAEG,UAIb9C,EAAAC,EAAAC,cAAA,mBCvEO6C,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnD,EAAAC,EAAAC,cAACF,EAAAC,EAAMmD,WAAP,KACEpD,EAAAC,EAAAC,cAACmD,EAAD","file":"static/js/main.3e7a7c8e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"text-3xl font-bold flex items-center \">\r\n        <h1>MyPass</h1>\r\n        <a>イベントを探す</a>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport React from \"react\";\n\n//import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [sheets, setSheets] = useState(0);\n  const [title, setTitle] = useState(\"\");\n  // let url = `ws://${window.location.host}/ws/socet-server/`;\n  let url = `ws://127.0.0.1:8000/ws/socket-server/`;\n  const chatSocket = new WebSocket(url);\n  useEffect(() => {\n    chatSocket.onmessage = (e) => {\n      const data = JSON.parse(e.data);\n      console.log(data);\n      setMessages(data);\n    };\n  }, []);\n\n  const sendMessage = () => {\n    chatSocket.send(\n      JSON.stringify({\n        type: \"chat\",\n        message: message,\n        title: title,\n        sheets: sheets,\n      })\n    );\n    setMessage(\"\");\n    setSheets(0);\n    setTitle(\"\");\n    chatSocket.onmessage = (e) => {\n      const data = JSON.parse(e.data);\n      console.log(data);\n      setMessages(data);\n    };\n  };\n  return (\n    <div className=\"App\">\n      <Header />\n      <h2> title</h2>\n      <textarea\n        value={title}\n        onChange={(e) => {\n          setTitle(e.target.value);\n        }}\n      />\n      <h2>body</h2>\n      <textarea\n        value={message}\n        onChange={(e) => {\n          setMessage(e.target.value);\n        }}\n      />\n\n      <h2>sheets</h2>\n      <textarea\n        value={sheets}\n        onChange={(e) => {\n          setSheets(e.target.value);\n        }}\n      />\n\n      <button onClick={sendMessage}>send</button>\n      <div>\n        {messages.map((m, index) => (\n          <div key={index}>\n            <h1> {m.title} </h1>\n            <h2>{m.body}</h2>\n          </div>\n        ))}\n      </div>\n      <h1>aui</h1>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}